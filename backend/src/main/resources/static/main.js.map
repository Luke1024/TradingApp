{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/account/account.component.ts","./src/app/account/account.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/chart/chart.component.ts","./src/app/chart/chart.component.html","./src/app/currency-service.ts","./src/app/how-to/how-to.component.ts","./src/app/how-to/how-to.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/models/order-state.ts","./src/app/order/order.component.ts","./src/app/order/order.component.html","./src/app/trading-view/trading-view.component.html","./src/app/trading-view/trading-view.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;;;;;;ACLO,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;4GAAd,cAAc;QCP3B,oEAAG;QAAA,uEAAY;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;;ACCsF;AAMtD;;;;;;;;ICe3C,6EAA0F;IAArB,uTAAoB;IAAC,mEAAQ;IAAA,4DAAS;;;;IAiBnG,yEAA2C;IACvC,yEAAuB;IACnB,4EAAwC;IAAA,kEAAO;IAAA,4DAAQ;IACvD,4EAAkH;IAA3D,kWAA6B;IAApF,4DAAkH;IAClH,oEAAG;IAAA,uDAA2B;IAAA,4DAAI;IACtC,4DAAM;IACV,4DAAM;;;IAHyD,0DAA6B;IAA7B,2FAA6B;IACjF,0DAA2B;IAA3B,+FAA2B;;;;IAI1C,0EAAoD;IAChD,6EAA+E;IAAzB,mUAAwB;IAAC,wEAAa;IAAA,4DAAS;IACrG,6EAAqF;IAA/B,yUAA8B;IAAC,sEAAW;IAAA,4DAAS;IACzG,6EAAyE;IAAnB,6TAAkB;IAAC,yEAAc;IAAA,4DAAS;IACpG,4DAAM;;;;IACN,0EAAqD;IACjD,6EAA8E;IAAxB,kUAAuB;IAAC,uEAAY;IAAA,4DAAS;IACnG,6EAAyE;IAAnB,6TAAkB;IAAC,iEAAM;IAAA,4DAAS;IAC5F,4DAAM;;;;IAhCV,sEAAkB;IACd,yEAA6B;IACzB,yEAAkB;IACd,yEAAuB;IACnB,4EAA6C;IAAA,uEAAY;IAAA,4DAAQ;IACjE,4EAA8G;IAA/D,8VAAiC;IAAhF,4DAA8G;IAC9G,oEAAG;IAAA,uDAAwB;IAAA,4DAAI;IACnC,4DAAM;IACV,4DAAM;IACN,yEAAkB;IACd,0EAAuB;IACnB,6EAA6C;IAAA,wEAAY;IAAA,4DAAQ;IACjE,6EAAwH;IAA5D,4VAA8B;IAA1F,4DAAwH;IACxH,qEAAG;IAAA,wDAA4B;IAAA,4DAAI;IACvC,4DAAM;IACV,4DAAM;IACN,sHAMM;IACV,4DAAM;IACN,sHAIM;IACN,sHAGM;IACV,4DAAM;;;IA5ByD,0DAAiC;IAAjC,+FAAiC;IAC7E,0DAAwB;IAAxB,4FAAwB;IAMiC,0DAA8B;IAA9B,4FAA8B;IACvF,0DAA4B;IAA5B,gGAA4B;IAGpB,0DAAsB;IAAtB,yFAAsB;IAQvC,0DAAqB;IAArB,wFAAqB;IAKrB,0DAAsB;IAAtB,yFAAsB;;;;IAKhC,0EAA0D;IACtD,gFAA8D;IAAnC,mVAAkC;IAAC,4DAAY;IAC9E,4DAAM;;;IADS,0DAAe;IAAf,4EAAe;;;;IAG1B,6EAAqF;IAArB,0TAAoB;IAAC,oEAAS;IAAA,4DAAS;;;;IAE3G,6EAAqI;IAA1E,4TAAsB;IAAoD,6EAAkB;IAAA,4DAAS;;;;IAChK,6EAAoI;IAA1E,4TAAsB;IAAoD,6EAAkB;IAAA,4DAAS;;;;IAG3J,0EAAgE;IAC5D,gFAA8D;IAAnC,0VAAkC;IAAC,4DAAY;IAC9E,4DAAM;;;IADS,0DAAe;IAAf,4EAAe;;;IAHlC,sEAAuD;IACnD,oEAAG;IAAA,0EAAe;IAAA,4DAAI;IACtB,mHAEM;IACV,4DAAM;;;IAH6C,0DAAe;IAAf,wFAAe;;ADpDnE,MAAM,gBAAgB;IAgB3B,YAAoB,eAA+B;QAA/B,oBAAe,GAAf,eAAe,CAAgB;QAdzC,eAAU,GAAG,IAAI,uDAAY,EAAc;QAIrD,qBAAgB,GAAW,KAAK;QAEhC,WAAM,GAAc,EAAE;QAEtB,iBAAY,GAAc,EAAE;QAI5B,SAAI,GAAW,IAAI,CAAC;QAGlB,IAAI,CAAC,WAAW,GAAG,EAAC,QAAQ,EAAC,EAAE,EAAE,YAAY,EAAC,EAAE,EAAE,WAAW,EAAC,EAAE,EAAE,MAAM,EAAC,KAAK,EAAmB;IACnG,CAAC;IAED,QAAQ;QACN,IAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAC;YACtB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAClB,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,eAAe,EAAE;SACvB;aAAM;YACL,IAAI,CAAC,QAAQ,EAAE;SAChB;QACD,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YACjD,IAAG,KAAK,EAAC;gBACP,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC/B;QACH,CAAC,CAAC;IACJ,CAAC;IAEO,SAAS;QACf,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YACjE,IAAG,MAAM,IAAI,IAAI,EAAC;gBAChB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;aACtB;QACH,CAAC,CAAC;IACJ,CAAC;IAEO,eAAe;QACrB,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;YAC7E,IAAG,YAAY,IAAI,IAAI,EAAC;gBACtB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;aAClC;QACH,CAAC,CAAC;IACJ,CAAC;IAEO,UAAU,CAAC,OAAkB;QACnC,IAAG,OAAO,CAAC,OAAO,EAAC;YACjB,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;gBAC3D,IAAG,OAAO,IAAI,IAAI,EAAC;oBACjB,IAAG,OAAO,CAAC,MAAM,EAAC;wBAChB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;qBACjC;iBACF;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,QAAQ;QACN,IAAI,KAAK,GAAY;YACnB,SAAS,EAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YACzB,EAAE,EAAC,CAAC;YACJ,QAAQ,EAAC,SAAS;YAClB,GAAG,EAAC,GAAG;YACP,MAAM,EAAC,CAAC;YACR,KAAK,EAAC,CAAC;YACP,MAAM,EAAC,CAAC;YACR,KAAK,EAAC,CAAC;YACP,MAAM,EAAC,CAAC;YACR,SAAS,EAAC,IAAI;YACd,UAAU,EAAC,uEAAsB;SAClC;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IACzB,CAAC;IAED,WAAW,CAAC,KAAc;QACxB,IAAG,KAAK,CAAC,UAAU,IAAE,kEAAiB,EAAC;YACrC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,KAAK,EAAC,EAAE;gBAChD,IAAG,KAAK,IAAE,aAAa,EAAC;oBACtB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC;iBAClC;YACH,CAAC,CAAC;SACH;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,aAAa,EAAE,KAAK,EAAC,EAAE;gBAC1C,IAAG,KAAK,IAAE,aAAa,EAAC;oBACtB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC;iBAC5B;YACH,CAAC,CAAC;SACH;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,EAAE;IACjB,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACpB,CAAC;IAED,YAAY;QACV,IAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAC;YAC3B,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACpE,IAAG,QAAQ,IAAI,IAAI,EAAC;oBAClB,IAAG,QAAQ,CAAC,MAAM,EAAC;wBACjB,IAAG,QAAQ,CAAC,UAAU,IAAI,IAAI,EAAC;4BAC7B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;4BACjC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;yBACnB;qBACF;iBACF;YACH,CAAC,CAAC;SACH;IACH,CAAC;IAEC,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACrE,IAAG,QAAQ,IAAI,IAAI,EAAC;gBAChB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;aAClC;QACH,CAAC,CAAC;IACJ,CAAC;IAEO,eAAe,CAAC,WAA0B;QAChD,4BAA4B;QAC5B,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW;QACtD,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,WAAW,CAAC,YAAY;QACxD,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,WAAW,CAAC,QAAQ;QAChD,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM;IAC9C,CAAC;IAED,yBAAyB;IAEzB,WAAW;QACT,IAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAC;YACzB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBAClE,IAAG,QAAQ,IAAI,IAAI,EAAC;oBAClB,IAAG,QAAQ,CAAC,MAAM,EAAC;wBACjB,IAAG,QAAQ,CAAC,UAAU,IAAI,IAAI,EAAC;4BAC7B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;4BAChC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;yBACnB;qBACF;iBACF;YACH,CAAC,CAAC;SACH;IACH,CAAC;IAEO,MAAM,CAAC,UAAqB;QAClC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;IAChC,CAAC;IAEO,YAAY,CAAC,OAAkB;QACrC,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE;QAC5B,IAAG,CAAC,IAAI,CAAC,IAAI,EAAC;YACZ,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW;YAC9C,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ;SACzC;QACD,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO;QACtC,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO;IACxC,CAAC;IAED,MAAM;QACJ,IAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAC;YACtB,IAAI,CAAC,4BAA4B,EAAE,CAAC;SACrC;aAAM;YACL,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;IACH,CAAC;IAEO,4BAA4B;QAClC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACpE,IAAG,QAAQ,EAAC;gBACV,IAAI,CAAC,kBAAkB,EAAE;aAC1B;QACH,CAAC,CAAC;IACJ,CAAC;IAEO,kBAAkB;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;IACpC,CAAC;IAEM,UAAU;QACf,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAC/B,CAAC;IAEM,UAAU;QACf,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAChC,CAAC;;gFAjMU,gBAAgB;8GAAhB,gBAAgB;QCf7B,yEAAuB;QACnB,sEAAM;QACF,yEAA6B;QAC7B,yEAAkB;QACd,yEAAuB;QACnB,uEAAsB;QAAA,wEAAa;QAAA,4DAAI;QACvC,uEAAqB;QAAA,uDAAuB;QAAA,4DAAI;QACpD,4DAAM;QACV,4DAAM;QACN,yEAAkB;QACd,0EAAuB;QACnB,wEAAsB;QAAA,qEAAS;QAAA,4DAAI;QACnC,wEAAqB;QAAA,wDAAoB;QAAA,4DAAI;QACjD,4DAAM;QACV,4DAAM;QACN,0EAAkB;QACd,0EAAuB;QACnB,wEAAsB;QAAA,4EAAgB;QAAA,4DAAI;QAC1C,wEAAqB;QAAA,wDAAmB;QAAA,4DAAI;QAChD,4DAAM;QACV,4DAAM;QACN,4DAAM;QACN,oHAA2G;QAC3G,+GAiCM;QACN,8GAEM;QACN,0EAAkB;QACd,oHAAuG;QAC3G,4DAAM;QACN,qHAAgK;QAChK,qHAA+J;QAC/J,8GAKM;QACV,4DAAM;QACV,4DAAM;;QAlE+B,0DAAuB;QAAvB,wFAAuB;QAMvB,0DAAoB;QAApB,qFAAoB;QAMpB,0DAAmB;QAAnB,oFAAmB;QAIvC,0DAAqB;QAArB,qFAAqB;QACxB,0DAAU;QAAV,0EAAU;QAkC+B,0DAAS;QAAT,+EAAS;QAI3C,0DAAqB;QAArB,qFAAqB;QAEzB,0DAAgD;QAAhD,sHAAgD;QAChD,0DAA+C;QAA/C,qHAA+C;QAClD,0DAA+C;QAA/C,qHAA+C;;;;;;;;;;;;;;;;;;;;;;AChEN;AAEE;AACE;AACkB;;;AAE7E,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAc,EAAE;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,sFAAoB,EAAE;IACpD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,oEAAc,EAAE;IAC5C,+CAA+C;IAC/C,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,kEAAc,EAAC;CACzC,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHlB,CAAC,iEAAoB,CAAC,MAAM,CAAC,CAAC,EAC7B,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;ACVjB,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,mBAAmB,CAAC;QAE5B,UAAK,GAAG,MAAM,CAAC;KAChB;;wEAJY,YAAY;0GAAZ,YAAY;QCPzB,yEAA6D;QAC3D,yEAA6B;QAC3B,yEAAuB;QACrB,yEAAkB;QAChB,yEAA+H;QAAvD,6KAAmB;QACzF,2EAA0C;QACxC,sEAAwF;QAAC,uEAC3F;QAAA,4DAAQ;QACR,2EAA0C;QACxC,sEAA8F;QAAC,qEACjG;QAAA,4DAAQ;QACR,4EAA0C;QACxC,uEAA0F;QAAC,oEAC7F;QAAA,4DAAQ;QAIV,4DAAM;QACR,4DAAM;QACN,4EAA+B;QACjC,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAlB0E,0DAAmB;QAAnB,8EAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJzC;AAGF;AACT;AACgC;AACxB;AACE;AACD;AACF;AACC;AACV;AACgC;AACd;AACN;AACE;AACF;;AAyBlD,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GADb,EAAE,YATJ;YACP,qEAAa;YACb,iEAAgB;YAChB,0FAAuB;YACvB,mEAAgB;YAChB,kEAAe;YACf,kEAAS;YACT,wDAAW;SACZ;mIAIU,SAAS,mBArBlB,wDAAY;QACZ,kEAAc;QACd,+DAAa;QACb,sFAAoB;QACpB,wEAAgB;QAChB,kEAAc;QACd,oEAAc;QACd,kEAAc,aAGd,qEAAa;QACb,iEAAgB;QAChB,0FAAuB;QACvB,mEAAgB;QAChB,kEAAe;QACf,kEAAS;QACT,wDAAW;;;;;;;;;;;;;;;;;;;;;;AC1BR,MAAM,cAAc;IAsBzB,YAAoB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QApB3C,UAAK,GAAU,EAAE;QACjB,SAAI,GAAmB,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAEnC,UAAU;QACV,cAAS,GAAY,IAAI,CAAC;QAC1B,WAAM,GAAY,IAAI,CAAC;QACvB,eAAU,GAAY,IAAI,CAAC;QAC3B,eAAU,GAAY,IAAI,CAAC;QAC3B,UAAK,GAAY,IAAI,CAAC;QACtB,UAAK,GAAY,IAAI,CAAC;QACtB,mBAAc,GAAY,IAAI,CAAC;QAC/B,mBAAc,GAAY,IAAI,CAAC;QAC/B,eAAU,GAAW,MAAM,CAAC;QAC5B,eAAU,GAAW,OAAO,CAAC;QAC7B,aAAQ,GAAY,IAAI,CAAC;QAEzB,gBAAW,GAAG;YACZ,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;SAC3E,CAAC;QAGA,OAAO,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC1D,CAAC;IAEO,QAAQ,CAAC,MAAqB;QACpC,IAAI,OAAO,GAAG;YACZ,IAAI,EAAC,QAAQ;YACb,MAAM,EAAC,MAAM;SACd;QACD,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACnD,IAAI,CAAC,KAAK,GAAG,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED,QAAQ,CAAC,IAAS;IAClB,CAAC;IAED,UAAU,CAAC,IAAS;IACpB,CAAC;IAED,YAAY,CAAC,IAAS;IACtB,CAAC;IAED,QAAQ;IACR,CAAC;;4EA7CU,cAAc;4GAAd,cAAc;QCT3B,2FAgBC;QAHD,6JAAU,oBAAgB,IAAC,yGACf,sBAAkB,IADH,6GAEb,wBAAoB,IAFP;QAI3B,4DAAwB;;QAhBxB,0EAAa;;;;;;;;;;;;;;;;;;;;;;ACCiC;AAGH;;;AAUpC,MAAM,eAAe;IA8BxB,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QA7BnC,YAAO,GAAG,uDAAuD;QACjE,kBAAa,GAAI,IAAI,CAAC,OAAO,GAAG,eAAe;QAE/C,aAAQ,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ;QAElC,sBAAsB;QACtB,gBAAW,GAAG,IAAI,CAAC,OAAO,GAAG,cAAc;QAC3C,mBAAc,GAAG,IAAI,CAAC,OAAO,GAAG,eAAe;QAC/C,eAAU,GAAG,IAAI,CAAC,OAAO,GAAG,UAAU;QACtC,mBAAc,GAAG,IAAI,CAAC,OAAO,GAAG,eAAe;QAC/C,qBAAgB,GAAG,IAAI,CAAC,OAAO,GAAG,iBAAiB;QAEnD,oBAAoB;QACpB,iBAAY,GAAG,IAAI,CAAC,OAAO,GAAG,YAAY;QAC1C,sBAAiB,GAAG,IAAI,CAAC,OAAO,GAAG,eAAe;QAClD,iBAAY,GAAG,IAAI,CAAC,OAAO,GAAG,aAAa;QAC3C,aAAQ,GAAG,IAAI,CAAC,OAAO,GAAG,QAAQ;QAClC,iBAAY,GAAG,IAAI,CAAC,OAAO,GAAG,aAAa;QAC3C,mBAAc,GAAG,IAAI,CAAC,OAAO,GAAG,eAAe;QAE/C,UAAK,GAAC,EAAE;QAEA,gBAAW,GAAG,IAAI,yCAAO,EAAE;QACnC,sBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;QAC3C,UAAK,GAAG,IAAI,yCAAO,EAAE;QAC7B,gBAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;QAE/B,eAAU,GAAG,aAAa;QAI9B,UAAU,CAAC,GAAE,EAAE;YACX,IAAI,CAAC,sBAAsB,EAAE;QACjC,CAAC,EAAE,KAAK,CAAC;IACb,CAAC;IAEO,sBAAsB;QAC1B,WAAW,CAAC,GAAE,EAAE;YACZ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC,EAAE,MAAM,CAAC;IACd,CAAC;IAED,OAAO;IACA,QAAQ;QACX,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClD,IAAG,KAAK,IAAI,IAAI,EAAC;YACb,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,QAAQ,EAAE,EAAC,OAAO,EAAC,UAAU,EAAC,CAAC;iBAC5D,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,WAAW,CAAY,WAAW,CAAC,CAAC,CAAC;iBAC1D,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACzC,OAAO,IAAI,CAAC;SACf;aAAM;YACH,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,OAAO,IAAI,CAAC,KAAK,CAAC;SACrB;IACL,CAAC;IAEO,QAAQ,CAAC,QAAY;;QACzB,IAAG,QAAQ,IAAI,IAAI,EAAC;YAChB,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM;YAC5B,IAAG,QAAQ,CAAC,IAAI,IAAI,IAAI,EAAC;gBACvB,IAAG,MAAM,IAAE,GAAG,EAAC;oBACb,IAAG,eAAQ,CAAC,IAAI,0CAAE,OAAO,KAAI,IAAI,EAAC;wBAC9B,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;wBACrD,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO;wBAClC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC;qBACpD;iBACF;aACF;SACJ;IACL,CAAC;IAGD,YAAY;IACL,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,IAAI,CAAC,aAAa,CAAC;IAC5D,CAAC;IAED,SAAS;IAEF,aAAa,CAAC,KAAY;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAChE,CAAC;IAEM,cAAc,CAAC,UAAqB;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,IAAI,CAAC,cAAc,EAAE,UAAU,CAAC;aACpE,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,WAAW,CAAiB,kBAAkB,CAAC,CAAC,CAAC;IAC3E,CAAC;IAEM,UAAU,CAAC,UAAqB;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC;aAC3F,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,WAAW,CAAqB,aAAa,CAAC,CAAC,CAAC;IAC1E,CAAC;IAEM,WAAW,CAAC,UAAqB;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC;aACrF,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,WAAW,CAAqB,cAAc,CAAC,CAAC,CAAC;IAC3E,CAAC;IAEM,aAAa,CAAC,UAAqB;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC;aACvF,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,WAAW,CAAqB,gBAAgB,CAAC,CAAC,CAAC;IAC7E,CAAC;IAEM,aAAa,CAAC,UAAqB;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAU,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC;aACnF,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,WAAW,CAAU,gBAAgB,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,OAAO;IACA,YAAY,CAAC,OAAkB;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,OAAO,CAAC,EAAE,CAAC;IACvF,CAAC;IAEM,kBAAkB,CAAC,OAAkB;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,OAAO,CAAC,EAAE,CAAC;IAC5F,CAAC;IAEM,YAAY,CAAC,QAAiB;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC;aAC9D,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,WAAW,CAAe,YAAY,CAAC,CAAC,CAAC;IACnE,CAAC;IAEM,QAAQ,CAAC,QAAiB;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,QAAQ,CAAC,EAAE,CAAC;aACrF,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,WAAW,CAAmB,WAAW,CAAC,CAAC,CAAC;IACtE,CAAC;IAEM,SAAS,CAAC,QAAiB;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC;aAC/E,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,WAAW,CAAmB,YAAY,CAAC,CAAC,CAAC;IACvE,CAAC;IAEM,WAAW,CAAC,QAAiB;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC;aACjF,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,WAAW,CAAmB,cAAc,CAAC,CAAC,CAAC;IACzE,CAAC;IAEM,WAAW,CAAC,QAAiB;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAU,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC;aAC1F,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,WAAW,CAAU,cAAc,CAAC,CAAC,CAAC;IAChE,CAAC;IAGO,WAAW,CAAI,SAAS,GAAG,WAAW,EAAE,MAAU;QACtD,OAAO,CAAC,KAAU,EAAiB,EAAE;YAEnC,wDAAwD;YACxD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;YAE/C,8DAA8D;YAC9D,IAAI,CAAC,GAAG,CAAC,GAAG,SAAS,YAAY,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;YAElD,yDAAyD;YACzD,OAAO,wCAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,wDAAwD;IAChD,GAAG,CAAC,OAAe;IAE3B,CAAC;;8EAjKM,eAAe;gHAAf,eAAe,WAAf,eAAe,mBAFZ,MAAM;;;;;;;;;;;;;;;;;;ACPf,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;4GAAd,cAAc;QCP3B,wEAAgC;QAAA,iEAAM;QAAA,4DAAK;QAC3C,qEAAI;QACA,qEAAI;QAAA,2EAAgB;QAAA,4DAAK;QACzB,qEAAI;QACA,qEAAI;QAAA,iFAAoB;QAAA,4DAAK;QAC7B,qEAAI;QAAA,iFAAoB;QAAA,4DAAK;QAC7B,sEAAI;QAAA,8EAAkB;QAAA,4DAAK;QAC3B,sEAAI;QAAA,+HAAmE;QAAA,4DAAK;QAC5E,sEAAI;QACA,sEAAI;QAAA,8EACA;QAAA,wEAAwE;QAAA,yHAA6D;QAAA,4DAAI;QAC7I,4DAAK;QACL,sEAAI;QAAA,oFAAwB;QAAA,4DAAK;QACrC,4DAAK;QACL,sEAAI;QAAA,kFAAoB;QAAA,4DAAK;QACjC,4DAAK;QACL,sEAAI;QAAA,qEAAS;QAAA,4DAAK;QAClB,sEAAI;QAAA,gFACA;QAAA,sEAAI;QAAA,iHAAqD;QAAA,4DAAK;QAC9D,sEAAI;QACA,sEAAI;QAAA,6KAAiH;QAAA,4DAAK;QAC1H,sEAAI;QAAA,+FACA;QAAA,wEAAkF;QAAA,mIAAuE;QAAA,4DAAI;QACjK,4DAAK;QACL,sEAAI;QAAA,4EAAgB;QAAA,4DAAK;QAC7B,4DAAK;QACL,sEAAI;QAAA,gFAAkB;QAAA,4DAAK;QAC/B,4DAAK;QACT,4DAAK;QACL,qEAAG;QAAA,sOACqF;QAAA,4DAAI;QAC5F,qEAAG;QAAA,+HAAmE;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;ACxBnE,MAAM,aAAa;IAExB,gBAAgB,CAAC;;0EAFN,aAAa;2GAAb,aAAa;QCP1B,4EAA8C;QAAA,sEAC5C;QAAA,kEAAoD;QACtD,4DAAS;QACT,4EAA8C;QAAA,mEAC5C;QAAA,kEAAuD;QACzD,4DAAS;;;;;;;;;;;;;;;;;ACLT,IAAY,UAIX;AAJD,WAAY,UAAU;IAClB,yCAA2B;IAC3B,+BAAiB;IACjB,+BAAiB;AACrB,CAAC,EAJW,UAAU,KAAV,UAAU,QAIrB;;;;;;;;;;;;;;;;;;;;;;ACJ8E;AAK5B;;;;;;;IC0CnC,uEAAmD;IAAA,+DAAI;IAAA,4DAAI;;;IAC3D,uEAAoD;IAAA,gEAAK;IAAA,4DAAI;;;;IAIzE,4EAAyG;IAAnB,mTAAkB;IAAC,iEAAM;IAAA,4DAAS;;;IAOxG,oEAA+B;IAAA,uDAAuB;IAAA,4DAAI;;;IAA3B,0DAAuB;IAAvB,4FAAuB;;;;IAJ9D,yEAAmE;IAC/D,yEAAuB;IACnB,4EAAqC;IAAA,uEAAY;IAAA,4DAAQ;IACzD,4EAAyG;IAAnE,+VAAuB;IAA7D,4DAAyG;IACzG,yHAA0D;IAC9D,4DAAM;IACV,4DAAM;;;IAHwC,0DAAuB;IAAvB,sFAAuB;IACzD,0DAAyB;IAAzB,6FAAyB;;;IAO7B,oEAA2B;IAAA,uDAAoB;IAAA,4DAAI;;;IAAxB,0DAAoB;IAApB,yFAAoB;;;IAC/C,oEAA6B;IAAA,uDAA+C;IAAA,4DAAI;;;IAAnD,0DAA+C;IAA/C,6HAA+C;;;IAC5E,oEAA+B;IAAA,uDAA0B;IAAA,4DAAI;;;IAA9B,0DAA0B;IAA1B,+FAA0B;;;IAOzD,oEAA2B;IAAA,uDAAoB;IAAA,4DAAI;;;IAAxB,0DAAoB;IAApB,yFAAoB;;;IAC/C,oEAA6B;IAAA,uDAA+C;IAAA,4DAAI;;;IAAnD,0DAA+C;IAA/C,6HAA+C;;;IAC5E,oEAAkC;IAAA,uDAA0B;IAAA,4DAAI;;;IAA9B,0DAA0B;IAA1B,+FAA0B;;;;IAvBxE,yEAA0C;IACtC,wHAMM;IACN,yEAAkB;IACd,yEAAuB;IACnB,4EAAuC;IAAA,8EAAmB;IAAA,4DAAQ;IAClE,4EAA8G;IAAtE,4VAA0B;IAAlE,4DAA8G;IAC9G,mHAAmD;IACnD,mHAAgF;IAChF,mHAA6D;IACjE,4DAAM;IACV,4DAAM;IACN,0EAAkB;IACd,0EAAuB;IACnB,6EAAuC;IAAC,8EAAiB;IAAA,4DAAQ;IACjE,6EAA8G;IAAtE,6VAA0B;IAAlE,4DAA8G;IAC9G,qHAAmD;IACnD,qHAAgF;IAChF,qHAAgE;IACpE,4DAAM;IACV,4DAAM;IACN,0EAAkB;IACd,2EAA8D;IAC1D,uEAAM;IACF,2EAAmI;IAA3D,8VAA6B;IACjG,6EAAyD;IACrD,wEAA6C;IAAA,gEACjD;IAAA,4DAAQ;IACR,6EAAwD;IACpD,wEAA8C;IAAA,iEAClD;IAAA,4DAAQ;IACZ,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAvCiB,0DAA8C;IAA9C,0HAA8C;IAUjB,0DAA0B;IAA1B,wFAA0B;IAC9D,0DAAqB;IAArB,0FAAqB;IACrB,0DAAuB;IAAvB,0FAAuB;IACvB,0DAAyB;IAAzB,4FAAyB;IAMW,0DAA0B;IAA1B,wFAA0B;IAC9D,0DAAqB;IAArB,0FAAqB;IACrB,0DAAuB;IAAvB,0FAAuB;IACvB,0DAA4B;IAA5B,+FAA4B;IAM4C,0DAA6B;IAA7B,2FAA6B;IAE/D,0DAAc;IAAd,uEAAc;IAGd,0DAAe;IAAf,wEAAe;;;;IAOrE,0EAAiF;IAC7E,4EAA6D;IAArB,4TAAoB;IAAC,qEAAU;IAAA,4DAAS;IAChF,4EAA2D;IAAnB,0TAAkB;IAAC,gEAAK;IAAA,4DAAS;IAC7E,4DAAM;;;;IACN,0EAAgF;IAC5E,4EAA6D;IAArB,4TAAoB;IAAC,qEAAU;IAAA,4DAAS;IAChF,4EAA+D;IAAvB,8TAAsB;IAAC,sEAAW;IAAA,4DAAS;IACvF,4DAAM;;;;IACN,0EAAqF;IACjF,4EAA8D;IAAtB,6TAAqB;IAAC,qEAAU;IAAA,4DAAS;IACjF,4EAA2D;IAAnB,0TAAkB;IAAC,iEAAM;IAAA,4DAAS;IAC9E,4DAAM;;;IArDV,sEAAmD;IAC/C,mHAwCM;IACN,kHAGM;IACN,kHAGM;IACN,kHAGM;IACV,4DAAM;;;IArD4B,0DAAU;IAAV,6EAAU;IAyClC,0DAAkD;IAAlD,qIAAkD;IAIlD,0DAAiD;IAAjD,oIAAiD;IAIjD,0DAAsD;IAAtD,yIAAsD;;AD1F7D,MAAM,cAAc;IAczB,YAAoB,eAA+B;QAA/B,oBAAe,GAAf,eAAe,CAAgB;QAZzC,eAAU,GAAG,IAAI,uDAAY,EAAY;QAE1C,UAAK,GAAY,EAAc,CAAC;QAEzC,qBAAgB,GAAU,iBAAiB;QAE3C,eAAU,GAAG,2DAAU;QAIvB,SAAI,GAAW,IAAI,CAAC;QAGlB,IAAI,CAAC,WAAW,GAAG,EAAC,OAAO,EAAC,EAAE,EAAE,UAAU,EAAC,EAAE,EAAE,KAAK,EAAC,CAAC,EAAE,UAAU,EAAC,EAAE,EAAE,KAAK,EAAC,CAAC,EAAE,MAAM,EAAC,KAAK,EAAiB,CAAC;IAChH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACjE,IAAG,QAAQ,IAAI,IAAI,EAAC;gBAClB,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;aAC7B;QACH,CAAC,CAAC;IACJ,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,EAAE;IACjB,CAAC;IAED,QAAQ;QACN,IAAG,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,IAAE,kEAAiB,EAAC;YACrE,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBAChE,IAAG,QAAQ,CAAC,MAAM,EAAC;oBACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;oBAC9B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;iBACnB;YACH,CAAC,CAAC;SACH;IACH,CAAC;IAED,UAAU;QACR,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACpB,CAAC;IAED,SAAS;QACP,IAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAC;YACzB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBAC9D,IAAG,QAAQ,CAAC,MAAM,EAAC;oBACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;oBAC9B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;iBACnB;YACH,CAAC,CAAC;SACH;IACH,CAAC;IAEO,MAAM,CAAC,QAAiB;QAC9B,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS;QACzC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE;QAC3B,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ;QACvC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG;QAC7B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK;QACjC,IAAG,CAAC,IAAI,CAAC,IAAI,EAAC;YACZ,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM;YACnC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM;SACpC;QACD,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK;QACjC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM;QACnC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS;QACzC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU;IAC7C,CAAC;IAED,MAAM;QACJ,IAAG,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,uEAAsB,EAAC;YACjD,IAAI,CAAC,4BAA4B,EAAE,CAAC;SACrC;aAAM;YACL,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;IACH,CAAC;IAEO,4BAA4B;QAClC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAChE,IAAG,QAAQ,EAAC;gBACV,IAAI,CAAC,kBAAkB,EAAE;aAC1B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,kBAAkB;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;IAClC,CAAC;IAED,QAAQ;QACN,IAAG,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,uEAAsB,EAAC;YACjD,IAAI,CAAC,IAAI,GAAG,KAAK;SAClB;QACD,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,SAAS,CACxC,KAAK,CAAC,EAAE;YACN,IAAG,KAAK,EAAC;gBACP,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;aAC1B;QACH,CAAC,CACF;QACD,IAAI,CAAC,QAAQ,EAAE;IACjB,CAAC;IAEO,QAAQ,CAAC,KAAc;QAC7B,IAAG,KAAK,CAAC,UAAU,IAAI,uEAAsB,EAAC;YAC5C,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACxD,IAAG,QAAQ,IAAI,IAAI,EAAC;oBAClB,IAAG,QAAQ,CAAC,MAAM,EAAC;wBACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;qBAC/B;iBACF;YACH,CAAC,CAAC;SACH;IACH,CAAC;;4EAtHU,cAAc;4GAAd,cAAc;QCb3B,yEAAuB;QACnB,yEAA6B;QACzB,yEAAkB;QACd,yEAAuB;QACnB,uEAAsB;QAAA,oEAAS;QAAA,4DAAI;QACnC,uEAAqB;QAAA,uDAAkB;QAAA,4DAAI;QAC/C,4DAAM;QACV,4DAAM;QACN,yEAAkB;QACd,yEAAuB;QACnB,wEAAsB;QAAA,gEAAI;QAAA,4DAAI;QAC9B,wEAAqB;QAAA,wDAAa;QAAA,4DAAI;QAC1C,4DAAM;QACV,4DAAM;QACN,0EAAkB;QACd,0EAAuB;QACnB,wEAAsB;QAAA,gFAAoB;QAAA,4DAAI;QAC9C,wEAAqB;QAAA,wDAAgB;QAAA,4DAAI;QAC7C,4DAAM;QACV,4DAAM;QACN,0EAAkB;QACd,0EAAuB;QACnB,wEAAsB;QAAA,6EAAiB;QAAA,4DAAI;QAC3C,wEAAqB;QAAA,wDAAe;QAAA,4DAAI;QAC5C,4DAAM;QACV,4DAAM;QACN,0EAAkB;QACd,0EAAuB;QACnB,wEAAsB;QAAA,8EAAkB;QAAA,4DAAI;QAC5C,wEAAqB;QAAA,wDAAgB;QAAA,4DAAI;QAC7C,4DAAM;QACV,4DAAM;QACN,0EAAkB;QACd,0EAAuB;QACnB,wEAAsB;QAAA,2EAAe;QAAA,4DAAI;QACzC,wEAAqB;QAAA,wDAAe;QAAA,4DAAI;QAC5C,4DAAM;QACV,4DAAM;QACN,0EAAkB;QACd,0EAAuB;QACnB,wEAAsB;QAAA,mEAAO;QAAA,4DAAI;QACjC,wEAAqB;QAAA,wDAAgB;QAAA,4DAAI;QAC7C,4DAAM;QACV,4DAAM;QACN,0EAAkB;QACd,0EAAuB;QACnB,wEAAsB;QAAA,uEAAW;QAAA,4DAAI;QACrC,wGAA2D;QAC3D,wGAA6D;QACjE,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,kHAAwH;QACxH,4GAsDM;QACV,4DAAM;;QAvG+B,0DAAkB;QAAlB,mFAAkB;QAMlB,0DAAa;QAAb,8EAAa;QAMb,0DAAgB;QAAhB,iFAAgB;QAMhB,0DAAe;QAAf,gFAAe;QAMf,0DAAgB;QAAhB,iFAAgB;QAMhB,0DAAe;QAAf,gFAAe;QAMf,0DAAgB;QAAhB,iFAAgB;QAMf,0DAA2B;QAA3B,6FAA2B;QAC3B,0DAA4B;QAA5B,8FAA4B;QAIrD,0DAA2C;QAA3C,+GAA2C;QAC9C,0DAA2C;QAA3C,+GAA2C;;;;;;;;;;;;;;;;;;;;;;;;;;;ICrDrD,yEAA8D;IAC1D,iFAAsE;IAArC,uVAAoC;IAAC,4DAAc;IACxF,4DAAM;;;IADW,0DAAmB;IAAnB,+EAAmB;;ACQ7B,MAAM,oBAAoB;IAE/B,YAAoB,eAA+B;QAA/B,oBAAe,GAAf,eAAe,CAAgB;QAEnD,kBAAa,GAAW,KAAK,CAAC;QAa9B,aAAQ,GAAgB,EAAE;IAf6B,CAAC;IAIxD,QAAQ;QACN,IAAI,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE;QAC3C,IAAG,KAAK,IAAI,IAAI,EAAC;YACf,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBAC7D,IAAG,QAAQ,IAAI,IAAI,EAAC;oBAClB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;iBAC1B;YACH,CAAC,CAAC;SACH;IACH,CAAC;IAID,aAAa,CAAC,OAAkB;QAC9B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,eAAe,EAAE,KAAK,EAAC,EAAE;YAC9C,IAAG,OAAO,IAAE,eAAe,EAAC;gBAC1B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;aAC/B;QACH,CAAC,CAAC;IACJ,CAAC;IAED,UAAU;QACR,IAAI,OAAO,GAAc;YACvB,EAAE,EAAC,CAAC;YACJ,WAAW,EAAC,EAAE;YACd,QAAQ,EAAC,EAAE;YACX,OAAO,EAAC,KAAK;YACb,OAAO,EAAC,KAAK;SACd;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;IAC7B,CAAC;;wFApCU,oBAAoB;kHAApB,oBAAoB;QDTjC,gHAEM;QACN,sEAAK;QACD,4EAA+D;QAAvB,4IAAS,gBAAY,IAAC;QAAC,sEAAW;QAAA,4DAAS;QACvF,4DAAM;;QAL2C,iFAAW;;;;;;;;;;;;;;;;;AEA5D,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","import { trigger } from '@angular/animations';\r\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\r\nimport { CurrencyService } from '../currency-service';\r\nimport { AccountDto as AccountDto } from '../models/account';\r\nimport { AccountInfoDto } from '../models/account-info';\r\nimport { OrderDto } from '../models/order-dto';\r\nimport { OrderInfoDto } from '../models/order-info';\r\nimport { OrderState } from '../models/order-state';\r\nimport { State } from '../models/state';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.css']\r\n})\r\nexport class AccountComponent implements OnInit {\r\n  \r\n  @Output() autoRemove = new EventEmitter<AccountDto>()\r\n\r\n  @Input() account!:AccountDto\r\n\r\n  showClosedOrders:boolean = false\r\n\r\n  orders:OrderDto[] = [] \r\n\r\n  closedOrders:OrderDto[] = []\r\n\r\n  correctness:AccountInfoDto\r\n\r\n  edit:boolean = true;\r\n\r\n  constructor(private currencyService:CurrencyService) {\r\n    this.correctness = {nameInfo:\"\", leverageInfo:\"\", balanceInfo:\"\", status:false} as AccountInfoDto\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(this.account.created){\r\n      this.edit = false;\r\n      this.getOrders()\r\n      this.getClosedOrders()\r\n    } else {\r\n      this.onChange()\r\n    }\r\n    this.currencyService.pulseStream.subscribe(pulse => {\r\n      if(pulse){\r\n        this.getAccount(this.account);\r\n      }\r\n    })\r\n  }\r\n\r\n  private getOrders(){\r\n    this.currencyService.getAllOrders(this.account).subscribe(orders => {\r\n      if(orders != null){\r\n        this.orders = orders;\r\n      }\r\n    })\r\n  }\r\n\r\n  private getClosedOrders(){\r\n    this.currencyService.getAllClosedOrders(this.account).subscribe(closedOrders => {\r\n      if(closedOrders != null){\r\n        this.closedOrders = closedOrders;\r\n      }\r\n    })\r\n  }\r\n\r\n  private getAccount(account:AccountDto){\r\n    if(account.created){\r\n      this.currencyService.getAccount(account).subscribe(account => {\r\n        if(account != null){\r\n          if(account.status){\r\n            this.update(account.accountDto);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  addOrder(){\r\n    var order:OrderDto = {\r\n      accountId:this.account.id,\r\n      id:0,\r\n      currency:\"EUR/USD\",\r\n      lot:0.1,\r\n      tpPips:0,\r\n      tpVal:0,\r\n      slPips:0,\r\n      slVal:0,\r\n      profit:0,\r\n      longOrder:true,\r\n      orderState:OrderState.IN_CREATION\r\n    }\r\n    this.orders.push(order)\r\n  }\r\n\r\n  deleteOrder(order:OrderDto){\r\n    if(order.orderState==OrderState.CLOSED){\r\n      this.closedOrders.forEach((orderFromList, index)=>{\r\n        if(order==orderFromList){\r\n          this.closedOrders.splice(index,1)\r\n        }\r\n      })\r\n    } else {\r\n      this.orders.forEach((orderFromList, index)=>{\r\n        if(order==orderFromList){\r\n          this.orders.splice(index,1)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  settings(){\r\n    this.edit = true;\r\n    this.onChange()\r\n  }\r\n\r\n  cancelEditSettings(){\r\n    this.edit = false;\r\n  }\r\n\r\n  saveSettings(){\r\n    if(this.correctness.status){\r\n    this.currencyService.accountUpdate(this.account).subscribe(response => {\r\n      if(response != null){\r\n        if(response.status){\r\n          if(response.accountDto != null){\r\n            this.update(response.accountDto);\r\n            this.edit = false;\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n  onChange(){\r\n    this.currencyService.getAccountInfo(this.account).subscribe(response => {\r\n      if(response != null){\r\n          this.setInfoMessages(response);\r\n      }\r\n    })\r\n  }\r\n\r\n  private setInfoMessages(accountInfo:AccountInfoDto){\r\n    //map to not restart models \r\n    this.correctness.balanceInfo = accountInfo.balanceInfo\r\n    this.correctness.leverageInfo = accountInfo.leverageInfo\r\n    this.correctness.nameInfo = accountInfo.nameInfo\r\n    this.correctness.status = accountInfo.status\r\n  }\r\n\r\n  // creation state methods\r\n\r\n  saveAccount(){\r\n    if(this.correctness.status){\r\n      this.currencyService.accountSave(this.account).subscribe(response => {\r\n        if(response != null){\r\n          if(response.status){\r\n            if(response.accountDto != null){\r\n              this.update(response.accountDto)\r\n              this.edit = false;\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  private update(accountDto:AccountDto){\r\n    this.smartMapping(accountDto);\r\n  }\r\n\r\n  private smartMapping(account:AccountDto){\r\n    this.account.id = account.id\r\n    if(!this.edit){\r\n      this.account.accountName = account.accountName\r\n      this.account.leverage = account.leverage\r\n    }\r\n    this.account.balance = account.balance\r\n    this.account.created = account.created\r\n  }\r\n\r\n  delete(){\r\n    if(this.account.created){\r\n      this.deleteFromBackEndAndFrontEnd();\r\n    } else {\r\n      this.deleteFromFrontEnd();\r\n    }\r\n  }\r\n\r\n  private deleteFromBackEndAndFrontEnd(){\r\n    this.currencyService.accountDelete(this.account).subscribe(response => {\r\n      if(response){\r\n        this.deleteFromFrontEnd()\r\n      }\r\n    })\r\n  }\r\n\r\n  private deleteFromFrontEnd(){\r\n    this.autoRemove.emit(this.account)\r\n  }\r\n\r\n  public showClosed(){\r\n    this.showClosedOrders = true;\r\n  }\r\n\r\n  public hideClosed(){\r\n    this.showClosedOrders = false;\r\n  }\r\n}\r\n","<div class=\"card-body\">\r\n    <div >\r\n        <div class=\"card-group mb-3\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <p class=\"card-title\">Account name:</p>\r\n                <p class=\"card-text\">{{account.accountName}}</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <p class=\"card-title\">Leverage:</p>\r\n                <p class=\"card-text\">{{account.leverage}}</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <p class=\"card-title\">Account balance:</p>\r\n                <p class=\"card-text\">{{account.balance}}</p>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        <button *ngIf=\"account.created\" class=\"btn btn-outline-success mb-3\" (click)=\"settings()\">Settings</button>\r\n        <div *ngIf=\"edit\">\r\n            <div class=\"card-group mb-3\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <label for=\"account_name\" class=\"form-label\">Account Name</label>\r\n                        <input  class=\"form-control\" id=\"account_name\" [(ngModel)]=\"account.accountName\" (ngModelChange)=\"onChange()\">\r\n                        <p>{{correctness.nameInfo}}</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <label for=\"leverage_max\" class=\"form-label\">Leverage Max</label>\r\n                        <input type=\"number\" class=\"form-control\" id=\"leverage_max\" [(ngModel)]=\"account.leverage\" (ngModelChange)=\"onChange()\">\r\n                        <p>{{correctness.leverageInfo}}</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card\" *ngIf=\"!account.created\">\r\n                    <div class=\"card-body\">\r\n                        <label for=\"balance\" class=\"form-label\">Balance</label>\r\n                        <input type=\"number\" class=\"form-control\" id=\"balance\" [(ngModel)]=\"account.balance\" (ngModelChange)=\"onChange()\">\r\n                        <p>{{correctness.balanceInfo}}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div *ngIf=\"account.created\" class=\"btn-group mb-3\">\r\n                <button class=\"btn btn-outline-success\" type=\"button\" (click)=\"saveSettings()\">Save Settings</button>\r\n                <button class=\"btn btn-outline-success\" type=\"button\" (click)=\"cancelEditSettings()\">Cancel Edit</button>\r\n                <button class=\"btn btn-outline-success\" type=\"button\" (click)=\"delete()\">Remove Account</button>\r\n            </div>\r\n            <div *ngIf=\"!account.created\" class=\"btn-group mb-3\">\r\n                <button class=\"btn btn-outline-success\" type=\"button\" (click)=\"saveAccount()\">Save Account</button>\r\n                <button class=\"btn btn-outline-success\" type=\"button\" (click)=\"delete()\">Cancel</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"card m-2 shadow\" *ngFor=\"let order of orders\">\r\n            <app-order [order]=\"order\" (autoRemove)=\"deleteOrder($event)\"></app-order>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n            <button *ngIf=\"account.created\" class=\"btn btn-outline-success\" (click)='addOrder()'>Add Order</button>\r\n        </div>\r\n        <button *ngIf=\"closedOrders.length>0 && !showClosedOrders\" (click)=\"showClosed()\" class=\"btn btn-outline-success mb-3\" type=\"button\">Show Closed Orders</button>\r\n        <button *ngIf=\"closedOrders.length>0 && showClosedOrders\" (click)=\"hideClosed()\" class=\"btn btn-outline-success mb-3\" type=\"button\">Hide Closed Orders</button>\r\n        <div *ngIf=\"showClosedOrders && closedOrders.length>0\">\r\n            <p>Closed orders: </p>\r\n            <div class=\"card m-2 shadow\" *ngFor=\"let order of closedOrders\">\r\n                <app-order [order]=\"order\" (autoRemove)=\"deleteOrder($event)\"></app-order>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AboutComponent } from './about/about.component';\nimport { ChartComponent } from './chart/chart.component';\nimport { HowToComponent } from './how-to/how-to.component';\nimport { TradingViewComponent } from './trading-view/trading-view.component';\n\nconst routes: Routes = [\n  { path: 'main', component: ChartComponent },\n  { path: 'trading', component: TradingViewComponent },\n  { path: 'howTo', component: HowToComponent },\n  //{ path: 'about', component: AboutComponent },\n  { path: '**', component: ChartComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'trading-app-webUI';\n\n  model = \"main\";\n}\n","<div style=\"min-width: 80rem; max-width: 80%; margin: auto;\">\r\n  <div class=\"card m-2 shadow\">\r\n    <div class=\"card-body\">\r\n      <div class=\"mb-3\">\r\n        <div class=\"btn-group btn-group-toggle\" ngbRadioGroup name=\"radioBasic\" [(ngModel)]=\"model\" style=\"width: 100%; margin: auto;\">\r\n          <label ngbButtonLabel class=\"btn-success\">\r\n            <input ngbButton type=\"radio\" value=\"main\" routerLink=\"/main\" routerLinkActive=\"active\"> Main Chart\r\n          </label>\r\n          <label ngbButtonLabel class=\"btn-success\">\r\n            <input ngbButton type=\"radio\" value=\"trading\" routerLink=\"/trading\" routerLinkActive=\"active\"> Trading\r\n          </label>\r\n          <label ngbButtonLabel class=\"btn-success\">\r\n            <input ngbButton type=\"radio\" value=\"howTo\" routerLink=\"/howTo\" routerLinkActive=\"active\"> How To\r\n          </label>\r\n          <!--<label ngbButtonLabel class=\"btn-success\">\r\n              <input ngbButton type=\"radio\" value=\"about\" routerLink=\"/about\" routerLinkActive=\"active\"> About\r\n          </label>-->\r\n        </div>\r\n      </div>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { ChartComponent } from './chart/chart.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MenuComponent } from './menu/menu.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\nimport { TradingViewComponent } from './trading-view/trading-view.component';\nimport { AccountComponent } from './account/account.component';\nimport { OrderComponent } from './order/order.component';\nimport { HowToComponent } from './how-to/how-to.component';\nimport { AboutComponent } from './about/about.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChartComponent,\n    MenuComponent,\n    TradingViewComponent,\n    AccountComponent,\n    OrderComponent,\n    HowToComponent,\n    AboutComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    NgxChartsModule,\n    NgbModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { stringify } from '@angular/compiler/src/util';\nimport { Component, OnInit } from '@angular/core';\nimport { CurrencyService } from '../currency-service';\nimport { DataPointDto } from '../data-point-dto';\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css']\n})\nexport class ChartComponent implements OnInit {\n\n  multi: any[] = []\n  view:[number,number] = [1280, 600];\n\n  // options\n  autoScale: boolean = true;\n  legend: boolean = true;\n  showLabels: boolean = true;\n  animations: boolean = true;\n  xAxis: boolean = true;\n  yAxis: boolean = true;\n  showYAxisLabel: boolean = true;\n  showXAxisLabel: boolean = true;\n  xAxisLabel: string = 'Time';\n  yAxisLabel: string = 'Price';\n  timeline: boolean = true;\n\n  colorScheme = {\n    domain: ['#5AA454', '#E44D25', '#CFC0BB', '#7aa3e5', '#a8385d', '#aae3f5']\n  }; \n\n  constructor(private service:CurrencyService) {\n    service.getData().subscribe(data => this.loadData(data))\n  }\n\n  private loadData(points:DataPointDto[]){\n    var dataset = {\n      name:\"EURUSD\",\n      series:points\n    }\n    var processed = JSON.parse(JSON.stringify(dataset))\n    this.multi = [processed]\n  }\n\n  onSelect(data: any): void {\n  }\n\n  onActivate(data: any): void {\n  }\n\n  onDeactivate(data: any): void {\n  }\n\n  ngOnInit(): void {\n  }\n  \n}\n","\n<ngx-charts-line-chart\n[view]=\"view\"\n[scheme]=\"colorScheme\"\n[legend]=\"legend\"\n[autoScale]=\"autoScale\"\n[showXAxisLabel]=\"showXAxisLabel\"\n[showYAxisLabel]=\"showYAxisLabel\"\n[xAxis]=\"xAxis\"\n[yAxis]=\"yAxis\"\n[xAxisLabel]=\"xAxisLabel\"\n[yAxisLabel]=\"yAxisLabel\"\n[timeline]=\"timeline\"\n[results]=\"multi\"\n(select)=\"onSelect($event)\"\n(activate)=\"onActivate($event)\"\n(deactivate)=\"onDeactivate($event)\"\n>\n</ngx-charts-line-chart>","import { HttpClient, HttpErrorResponse, HttpHeaders, HttpResponse } from \"@angular/common/http\"\r\nimport { DataPointDto } from \"./data-point-dto\"\r\nimport { Inject, Injectable, OnInit } from \"@angular/core\"\r\nimport { Observable, of, Subject } from \"rxjs\"\r\nimport { AccountDto } from \"./models/account\"\r\nimport { OrderDto } from \"./models/order-dto\"\r\nimport { catchError } from \"rxjs/operators\"\r\nimport { StringDto } from \"./models/string-dto\"\r\nimport { AccountInfoDto } from \"./models/account-info\"\r\nimport { OrderInfoDto } from \"./models/order-info\"\r\nimport { AccountResponseDto } from \"./models/account-response\"\r\nimport { OrderResponseDto } from \"./models/order-response\"\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class CurrencyService {\r\n    rootUrl = 'https://protected-stream-68029.herokuapp.com/trading/'\r\n    timeSeriesUrl =  this.rootUrl + 'currencydata/'\r\n\r\n    tokenUrl = this.rootUrl + \"token/\"\r\n\r\n    //account service urls\r\n    accountsAll = this.rootUrl + \"account/all/\"\r\n    accountInfoUrl = this.rootUrl + \"account/info/\"\r\n    accountUrl = this.rootUrl + \"account/\"\r\n    accountSaveUrl = this.rootUrl + \"account/save/\"\r\n    accountUpdateUrl = this.rootUrl + \"account/update/\"\r\n    \r\n    //order service urls\r\n    ordersAllUrl = this.rootUrl + \"order/all/\"\r\n    orderClosedAllUrl = this.rootUrl + \"order/closed/\"\r\n    orderInfoUrl = this.rootUrl + \"order/info/\"\r\n    orderUrl = this.rootUrl + \"order/\"\r\n    saveOrderUrl = this.rootUrl + \"order/save/\"\r\n    updateOrderUrl = this.rootUrl + \"order/update/\"\r\n\r\n    token=\"\"\r\n\r\n    private tradingData = new Subject()\r\n    tradingDataStream = this.tradingData.asObservable()\r\n    private pulse = new Subject()\r\n    pulseStream = this.pulse.asObservable()\r\n\r\n    private storageKey = \"local_token\" \r\n\r\n    constructor(private http:HttpClient) {\r\n\r\n        setTimeout(()=> {\r\n            this.calibrateIntervalStart()\r\n        }, 60000)\r\n    }\r\n\r\n    private calibrateIntervalStart(){\r\n        setInterval(()=> {\r\n            this.pulse.next(true);\r\n        }, 300000)\r\n    }\r\n\r\n    //token\r\n    public getToken() {\r\n        var token = localStorage.getItem(this.storageKey);\r\n        if(token == null){\r\n            this.http.get<StringDto>(this.tokenUrl, {observe:'response'})\r\n            .pipe(catchError(this.handleError<StringDto>(\"get token\")))\r\n            .subscribe(token => this.setToken(token))\r\n            return null;\r\n        } else {\r\n            this.token = token;\r\n            return this.token;\r\n        }\r\n    }\r\n\r\n    private setToken(response:any){\r\n        if(response != null){\r\n            var status = response.status\r\n            if(response.body != null){\r\n              if(status==200){\r\n                if(response.body?.message != null){\r\n                    console.log(\"Setting token \" + response.body.message)\r\n                    this.token = response.body.message\r\n                    localStorage.setItem(this.storageKey, this.token)\r\n                }\r\n              }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    //chart data\r\n    public getData():Observable<DataPointDto[]> {\r\n        return this.http.get<DataPointDto[]>(this.timeSeriesUrl)\r\n    }\r\n\r\n    //account\r\n\r\n    public getAccountAll(token:string): Observable<AccountDto[]> {\r\n        return this.http.get<AccountDto[]>(this.accountsAll + token)\r\n    }\r\n\r\n    public getAccountInfo(accountDto:AccountDto): Observable<AccountInfoDto> {\r\n        return this.http.put<AccountInfoDto>(this.accountInfoUrl, accountDto)\r\n        .pipe(catchError(this.handleError<AccountInfoDto>('get account info')))\r\n    }\r\n\r\n    public getAccount(accountDto:AccountDto): Observable<AccountResponseDto> {\r\n        return this.http.get<AccountResponseDto>(this.accountUrl + this.token + '/' + accountDto.id)\r\n        .pipe(catchError(this.handleError<AccountResponseDto>('get account')))\r\n    }\r\n\r\n    public accountSave(accountDto:AccountDto): Observable<AccountResponseDto>{\r\n        return this.http.put<AccountResponseDto>(this.accountSaveUrl + this.token, accountDto)\r\n        .pipe(catchError(this.handleError<AccountResponseDto>('account save')))\r\n    }\r\n\r\n    public accountUpdate(accountDto:AccountDto):Observable<AccountResponseDto> {\r\n        return this.http.put<AccountResponseDto>(this.accountUpdateUrl + this.token, accountDto)\r\n        .pipe(catchError(this.handleError<AccountResponseDto>('account update')))\r\n    }\r\n\r\n    public accountDelete(accountDto:AccountDto): Observable<boolean>{\r\n        return this.http.delete<boolean>(this.accountUrl + this.token + '/' + accountDto.id)\r\n        .pipe(catchError(this.handleError<boolean>('account delete')))\r\n    }\r\n\r\n    //order\r\n    public getAllOrders(account:AccountDto): Observable<OrderDto[]>{\r\n        return this.http.get<OrderDto[]>(this.ordersAllUrl + this.token + '/' + account.id)\r\n    }\r\n\r\n    public getAllClosedOrders(account:AccountDto): Observable<OrderDto[]>{\r\n        return this.http.get<OrderDto[]>(this.orderClosedAllUrl + this.token + '/' + account.id)\r\n    }\r\n\r\n    public getOrderInfo(orderDto:OrderDto): Observable<OrderInfoDto>{\r\n        return this.http.put<OrderInfoDto>(this.orderInfoUrl, orderDto)\r\n        .pipe(catchError(this.handleError<OrderInfoDto>(\"order info\")))\r\n    }\r\n\r\n    public getOrder(orderDto:OrderDto): Observable<OrderResponseDto>{\r\n        return this.http.get<OrderResponseDto>(this.orderUrl + this.token + '/' + orderDto.id)\r\n        .pipe(catchError(this.handleError<OrderResponseDto>(\"get order\")))\r\n    }\r\n\r\n    public saveOrder(orderDto:OrderDto): Observable<OrderResponseDto>{\r\n        return this.http.put<OrderResponseDto>(this.saveOrderUrl + this.token, orderDto)\r\n        .pipe(catchError(this.handleError<OrderResponseDto>(\"save order\")))\r\n    }\r\n\r\n    public orderUpdate(orderDto:OrderDto): Observable<OrderResponseDto>{\r\n        return this.http.put<OrderResponseDto>(this.updateOrderUrl + this.token, orderDto)\r\n        .pipe(catchError(this.handleError<OrderResponseDto>(\"order update\")))\r\n    }\r\n\r\n    public deleteOrder(orderDto:OrderDto): Observable<boolean>{\r\n        return this.http.delete<boolean>(this.orderUrl + this.token + '/' + orderDto.id.toString())\r\n        .pipe(catchError(this.handleError<boolean>(\"order delete\")))\r\n    }\r\n\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n    \r\n          // TODO: send the error to remote logging infrastructure\r\n          console.error(error); // log to console instead\r\n    \r\n          // TODO: better job of transforming error for user consumption\r\n          this.log(`${operation} failed: ${error.message}`);\r\n    \r\n          // Let the app keep running by returning an empty result.\r\n          return of(result as T);\r\n        };\r\n      }\r\n    \r\n      /** Log a HeroService message with the MessageService */\r\n      private log(message: string) {\r\n\r\n      }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-how-to',\n  templateUrl: './how-to.component.html',\n  styleUrls: ['./how-to.component.css']\n})\nexport class HowToComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3 style=\"text-align: center;\">How to</h3>\n<ol>\n    <li>Account creation</li>\n    <ul>\n        <li>Click \"Trading\" tab.</li>\n        <li>Click \"Add account\".</li>\n        <li>Name your account.</li>\n        <li>Use default settings for leverage and balance or set custom values:</li>\n        <ul>\n            <li>what is leverage: \n                <a href=\"https://www.investopedia.com/ask/answers/06/forexleverage.asp\">https://www.investopedia.com/ask/answers/06/forexleverage.asp</a>\n            </li>\n            <li>set account balance in $</li>\n        </ul>\n        <li>Click \"Save account\"</li>\n    </ul>\n    <li>Add order</li>\n    <ul>Click \"Add order\"\n        <li>Open order using default values or set custom values:</li>\n        <ul>\n            <li>When setting take profit and stop loss value backend return tp and sl value in given currency based on lot value.</li>\n            <li>What are take profit and stop loss \n                <a href=\"https://fxscouts.com/forex-education/what-is-stop-loss-and-take-profit/\">https://fxscouts.com/forex-education/what-is-stop-loss-and-take-profit/</a>\n            </li>\n            <li>Set buy or sell.</li>\n        </ul>\n        <li>Click \"Open order\"</li>\n    </ul>\n</ol>\n<p>After the order is opened values are updated based on real-time data every 5 minutes.\n    When the order reach take-profit or stop-loss value orders are automatically closed.</p>\n<p>You can create as many accounts and orders per account as you want.</p>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent {\r\n\r\n  constructor() { }\r\n/*\r\n  model = \"howTo\";\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onChange(): void {\r\n    console.log(this.model)\r\n  }\r\n  */\r\n}\r\n","<button type=\"button\" class=\"btn btn-primary\">Main Chart\r\n  <a routerLink=\"/main\" routerLinkActive=\"active\"></a>\r\n</button>\r\n<button type=\"button\" class=\"btn btn-primary\">Trading\r\n  <a routerLink=\"/trading\" routerLinkActive=\"active\"></a>\r\n</button>\r\n\r\n\r\n<!--<div class=\"btn-group btn-group-toggle\" ngbRadioGroup name=\"radioBasic\" [(ngModel)]=\"model\" (ngModelChange)=\"onChange()\">\r\n    <label ngbButtonLabel class=\"btn-primary\">\r\n      <input ngbButton type=\"radio\" value=\"main\"> Main Chart\r\n    </label>\r\n    <label ngbButtonLabel class=\"btn-primary\">\r\n      <input ngbButton type=\"radio\" value=\"trading\"> Trading\r\n    </label>\r\n    <label ngbButtonLabel class=\"btn-primary\">\r\n      <input ngbButton type=\"radio\" value=\"howTo\"> How To\r\n    </label>\r\n    <label ngbButtonLabel class=\"btn-primary\">\r\n        <input ngbButton type=\"radio\" value=\"about\"> About\r\n    </label>\r\n</div>\r\n-->","export enum OrderState {\r\n    IN_CREATION = \"IN_CREATION\",\r\n    OPENED = \"OPENED\",\r\n    CLOSED = \"CLOSED\"\r\n}","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CurrencyService } from '../currency-service';\r\nimport { OrderDto } from '../models/order-dto';\r\nimport { OrderInfoDto } from '../models/order-info';\r\nimport { OrderState } from '../models/order-state';\r\nimport { State } from '../models/state';\r\n\r\n@Component({\r\n  selector: 'app-order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.css']\r\n})\r\nexport class OrderComponent implements OnInit {\r\n\r\n  @Output() autoRemove = new EventEmitter<OrderDto>()\r\n\r\n  @Input() order:OrderDto = {} as OrderDto;\r\n\r\n  unlimitedMessage:string = \"0 is unlimited.\"\r\n\r\n  orderState = OrderState\r\n\r\n  correctness:OrderInfoDto;\r\n\r\n  edit:boolean = true;\r\n\r\n  constructor(private currencyService:CurrencyService) {\r\n    this.correctness = {lotInfo:\"\", tpPipsInfo:\"\", tpVal:0, slPipsInfo:\"\", slVal:0, status:false} as OrderInfoDto;\r\n  }\r\n\r\n  onChange(){\r\n    this.currencyService.getOrderInfo(this.order).subscribe(response => {\r\n      if(response != null){\r\n        this.correctness = response;\r\n      }\r\n    })\r\n  }\r\n\r\n  editSlTp(){\r\n    this.edit = true;\r\n    this.onChange()\r\n  }\r\n\r\n  saveSlTp(){\r\n    if(this.correctness.status && this.order.orderState==OrderState.OPENED){\r\n      this.currencyService.orderUpdate(this.order).subscribe(response => {\r\n        if(response.status){\r\n          this.update(response.orderDto)\r\n          this.edit = false;\r\n        } \r\n      })\r\n    }\r\n  }\r\n\r\n  cancelEdit(){\r\n    this.edit = false;\r\n  }\r\n\r\n  openOrder(){\r\n    if(this.correctness.status){\r\n      this.currencyService.saveOrder(this.order).subscribe(response => {\r\n        if(response.status){\r\n          this.update(response.orderDto)\r\n          this.edit = false;\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  private update(orderDto:OrderDto){\r\n    console.log(orderDto)\r\n    this.order.accountId = orderDto.accountId\r\n    this.order.id = orderDto.id\r\n    this.order.currency = orderDto.currency\r\n    this.order.lot = orderDto.lot\r\n    this.order.tpVal = orderDto.tpVal\r\n    if(!this.edit){\r\n      this.order.tpPips = orderDto.tpPips\r\n      this.order.slPips = orderDto.slPips\r\n    }\r\n    this.order.slVal = orderDto.slVal\r\n    this.order.profit = orderDto.profit\r\n    this.order.longOrder = orderDto.longOrder\r\n    this.order.orderState = orderDto.orderState\r\n  }\r\n\r\n  delete(){\r\n    if(this.order.orderState != OrderState.IN_CREATION){\r\n      this.deleteFromBackEndAndFrontEnd(); \r\n    } else {\r\n      this.deleteFromFrontEnd();\r\n    }\r\n  }\r\n\r\n  private deleteFromBackEndAndFrontEnd():void {\r\n    this.currencyService.deleteOrder(this.order).subscribe(response => {\r\n      if(response){\r\n        this.deleteFromFrontEnd()\r\n      }\r\n    });\r\n  }\r\n\r\n  private deleteFromFrontEnd(){\r\n    this.autoRemove.emit(this.order)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(this.order.orderState != OrderState.IN_CREATION){\r\n      this.edit = false\r\n    }\r\n    this.currencyService.pulseStream.subscribe(\r\n      pulse => {\r\n        if(pulse){\r\n          this.getOrder(this.order)\r\n        }\r\n      }\r\n    )\r\n    this.onChange()\r\n  }\r\n\r\n  private getOrder(order:OrderDto){\r\n    if(order.orderState != OrderState.IN_CREATION){\r\n      this.currencyService.getOrder(order).subscribe(response => {\r\n        if(response != null){\r\n          if(response.status){\r\n            this.update(response.orderDto)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n","<div class=\"card-body\">\r\n    <div class=\"card-group mb-3\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <p class=\"card-title\">Currency:</p>\r\n                <p class=\"card-text\">{{order.currency}}</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <p class=\"card-title\">Lot:</p>\r\n                <p class=\"card-text\">{{order.lot}}</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <p class=\"card-title\">Take profit in pips:</p>\r\n                <p class=\"card-text\">{{order.tpPips}}</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <p class=\"card-title\">Take profit in $:</p>\r\n                <p class=\"card-text\">{{order.tpVal}}</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <p class=\"card-title\">Stop loss in pips:</p>\r\n                <p class=\"card-text\">{{order.slPips}}</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <p class=\"card-title\">Stop loss in $:</p>\r\n                <p class=\"card-text\">{{order.slVal}}</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <p class=\"card-title\">Profit:</p>\r\n                <p class=\"card-text\">{{order.profit}}</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <p class=\"card-title\">Long/Short:</p>\r\n                <p class=\"card-text\" *ngIf=\"order.longOrder==true\">LONG</p>\r\n                <p class=\"card-text\" *ngIf=\"order.longOrder==false\">SHORT</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <button *ngIf=\"order.orderState == orderState.CLOSED\" class=\"btn btn-outline-success\" (click)=\"delete()\">Delete</button>\r\n    <div *ngIf=\"order.orderState != orderState.CLOSED\">\r\n        <div class=\"card-group mb-3\" *ngIf=\"edit\">\r\n            <div class=\"card\" *ngIf=\"order.orderState==orderState.IN_CREATION\">\r\n                <div class=\"card-body\">\r\n                    <label for=\"lots\" class=\"form-label\">Lot settings</label>\r\n                    <input class=\"form-control\" id=\"lots\" [(ngModel)]=\"order.lot\" type=\"number\" (ngModelChange)=\"onChange()\">\r\n                    <p *ngIf=\"correctness.lotInfo\">{{correctness.lotInfo}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <label for=\"tpPips\" class=\"form-label\">Take profit in pips</label>\r\n                    <input class=\"form-control\" id=\"tpPips\" [(ngModel)]=\"order.tpPips\" type=\"number\" (ngModelChange)=\"onChange()\">\r\n                    <p *ngIf=\"order.tpPips==0\">{{unlimitedMessage}}</p>\r\n                    <p *ngIf=\"correctness.tpVal\">Tp pips value in currency {{correctness.tpVal}}</p>\r\n                    <p *ngIf=\"correctness.lotInfo\">{{correctness.tpPipsInfo}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <label for=\"slPips\" class=\"form-label\"> Stop loss in pips</label>\r\n                    <input class=\"form-control\" id=\"slPips\" [(ngModel)]=\"order.slPips\" type=\"number\" (ngModelChange)=\"onChange()\">\r\n                    <p *ngIf=\"order.slPips==0\">{{unlimitedMessage}}</p>\r\n                    <p *ngIf=\"correctness.slVal\">Sl pips value in currency {{correctness.slVal}}</p>\r\n                    <p *ngIf=\"correctness.slPipsInfo\">{{correctness.slPipsInfo}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\" style=\"margin: auto; margin-top:2rem;\">\r\n                    <div >\r\n                        <div class=\"btn-group btn-group-toggle\" ngbRadioGroup name=\"radioBasic\" [(ngModel)]=\"order.longOrder\" (ngModelChange)=\"onChange()\">\r\n                            <label ngbButtonLabel class=\"btn-outline-success btn-lg\">\r\n                                <input ngbButton type=\"radio\" [value]=\"true\">Buy\r\n                            </label>\r\n                            <label ngbButtonLabel class=\"btn-outline-danger btn-lg\">\r\n                                <input ngbButton type=\"radio\" [value]=\"false\">Sell\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"!edit && order.orderState==orderState.OPENED\" class=\"btn-group mb-3\">\r\n            <button class=\"btn btn-outline-success\" (click)=\"editSlTp()\">Edit SL/TP</button>\r\n            <button class=\"btn btn-outline-success\" (click)=\"delete()\">Close</button>\r\n        </div>\r\n        <div *ngIf=\"edit && order.orderState==orderState.OPENED\" class=\"btn-group mb-3\">\r\n            <button class=\"btn btn-outline-success\" (click)=\"saveSlTp()\">Save SL/TP</button>\r\n            <button class=\"btn btn-outline-success\" (click)=\"cancelEdit()\">Cancel Edit</button>\r\n        </div>\r\n        <div *ngIf=\"edit && order.orderState==orderState.IN_CREATION\" class=\"btn-group mb-3\">\r\n            <button class=\"btn btn-outline-success\" (click)=\"openOrder()\">Open Order</button>\r\n            <button class=\"btn btn-outline-success\" (click)=\"delete()\">Cancel</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","<div class=\"card m-2 shadow\" *ngFor=\"let account of accounts\">\n    <app-account [account]=\"account\" (autoRemove)=\"deleteAccount($event)\"></app-account>\n</div>\n<div>\n    <button class=\"btn btn-outline-success\" (click)='addAccount()'>Add Account</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { CurrencyService } from '../currency-service';\r\nimport { AccountDto } from '../models/account';\r\n\r\n@Component({\r\n  selector: 'app-trading-view',\r\n  templateUrl: './trading-view.component.html',\r\n  styleUrls: ['./trading-view.component.css']\r\n})\r\nexport class TradingViewComponent implements OnInit {\r\n\r\n  constructor(private currencyService:CurrencyService) { }\r\n\r\n  tokenInMemory:boolean = false;\r\n\r\n  ngOnInit(): void {\r\n    var token = this.currencyService.getToken()\r\n    if(token != null){\r\n      this.currencyService.getAccountAll(token).subscribe(accounts => {\r\n        if(accounts != null){\r\n          this.accounts = accounts;\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  accounts:AccountDto[] = []\r\n  \r\n  deleteAccount(account:AccountDto){\r\n    this.accounts.forEach((accountFromList, index)=>{\r\n      if(account==accountFromList){\r\n        this.accounts.splice(index,1);\r\n      }\r\n    })\r\n  }\r\n\r\n  addAccount() {\r\n    var account:AccountDto = {\r\n      id:1,\r\n      accountName:\"\",\r\n      leverage:10,\r\n      balance:10000,\r\n      created:false,\r\n    }\r\n    this.accounts.push(account)\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}